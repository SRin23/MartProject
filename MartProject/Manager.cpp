#include<iostream>
#include<cstdio>
#include<conio.h>	//getch사용
#include<windows.h>	//좌표사용
#include <string>
#include "Manager.h"

//방향키 및 키값 정의
#define UP 0
#define DOWN 1
#define LEFT 2
#define RIGHT 3
#define ENTER 4	//ENTER키 : t선택
#define TAB 5	//TAB키 : Main으로 빠져나오기

using namespace std;

//품목추가(원래 없는 제품) -> 마트 -> 대강 OK
//만약, 있는 제품이라면 존재하는 품목입니다.
void Manager::addProduct() {
	string productName;	//제품 이름
	int price;			//제품 가격
	int customerPrice;
	int quantity;		//제품 수량

	while (true) {
		system("cls");
		//totalProfit();
		gotoxy(33, 2);
		cout << "<품목 추가>" << endl;
		gotoxy(10, 4);
		cout << "※ 추가하고자 하는 품목의 이름, 가격, 수량을 입력하세요 ※" << endl;

		gotoxy(30, 7);
		cout << "제품 이름 : ";
		cin >> productName;
		gotoxy(30, 8);
		cout << "제품 가격 : ";
		cin >> price;
		gotoxy(28, 9);
		cout << "소비자 가격 : ";
		cin >> customerPrice;
		gotoxy(30, 10);
		cout << "제품 수량 : ";
		cin >> quantity;

		product[cnt++] = new Product(productName, price, customerPrice, quantity);

		gotoxy(31, 12);
		cout << "<추가되었습니다>" << endl;

		if (keyControl() == TAB) {
			return;
		}
	}
}

//품목삭제(원래 없는 제품) -> 배열 내 삭제 구현
void Manager::delProduct() {
	string productName;	//제품 이름
	while (true) {
		system("cls");
		//totalProfit();
		gotoxy(33, 2);
		cout << "<품목 삭제>" << endl;
		gotoxy(16, 4);
		cout << "※ 삭제하고자 하는 품목의 이름을 입력하세요 ※" << endl;

		gotoxy(32, 7);
		cout << "제품 이름 : ";
		cin >> productName;

		int check = 0;
		for (int i = 0; i < 5; i++) {
			if ((product[i]->getProductName()) == productName) {
				delete product[i];
				gotoxy(31, 12);
				cout << "<삭제되었습니다>" << endl;
				check = 1;
				break;
			}
		}

		if (check != 1) {
			cout << "품목이 추가되지 않아 삭제할 수 없습니다." << endl;
		}

		if (keyControl() == TAB) {
			return;
		}
	}
}

//입고(원래 있는 제품에 수량 +)
void Manager::warehousing() {
	string productName;	//제품 이름
	int quantity;		//제품 수량
	int check;

	while (true) {
		system("cls");
		check = 0;
		//totalProfit();
		gotoxy(33, 2);
		cout << "<입고>" << endl;
		gotoxy(10, 4);
		cout << "※ 입고하고자 하는 품목의 이름, 수량을 입력하세요 ※" << endl;

		gotoxy(32, 7);
		cout << "제품 이름 : ";
		cin >> productName;
		gotoxy(32, 8);
		cout << "제품 수량 : ";
		cin >> quantity;

		//product배열에 물품이 있는지 확인
		for (int i = 0; i < cnt; i++) {
			if (product[i]->getProductName() == productName) {
				product[i]->addQuantity(quantity);
				gotoxy(31, 12);
				cout << "입고되었습니다." << endl;
				check = 1;
				break;
			}
		}
		if (check != 1) {
			gotoxy(20, 12);
			cout << "존재하지 않는 제품입니다." << endl;
			gotoxy(23, 13);
			cout << "품목을 추가해 주세요." << endl;
		}
		if (keyControl() == TAB) {
			return;
		}
	}
}

//출고(원래 있는 제품에 수량 -)
void Manager::release() {
	string productName;	//제품 이름
	int quantity;		//제품 수량
	int check;

	while (true) {
		system("cls");
		check = 0;
		totalProfit();
		gotoxy(33, 2);
		cout << "<출고>" << endl;
		gotoxy(10, 4);
		cout << "※ 입고하고자 하는 품목의 이름, 수량을 입력하세요 ※" << endl;

		gotoxy(32, 7);
		cout << "제품 이름 : ";
		cin >> productName;
		gotoxy(32, 8);
		cout << "제품 수량 : ";
		cin >> quantity;

		//product배열에 물품이 있는지 확인
		for (int i = 0; i < cnt; i++) {
			if (product[i]->getProductName() == productName) {
				product[i]->disQuantity(quantity);
				gotoxy(31, 12);
				cout << "출고되었습니다." << endl;
				check = 1;
				break;
			}
		}
		if (check != 1) {
			gotoxy(20, 12);
			cout << "존재하지 않는 제품입니다." << endl;
			gotoxy(23, 13);
			cout << "품목을 추가해 주세요." << endl;
		}
		if (keyControl() == TAB) {
			return;
		}
	}
}

//title 출력하기
void Manager::title() {
	gotoxy(10, 2); cout << "------------------------------------------------------------";
	gotoxy(16, 5); cout << "##       ##        #        #######     ########";
	gotoxy(16, 6); cout << "####   ####      ## ##      ##    ##       ##";
	gotoxy(16, 7); cout << "##  ###  ##     ##   ##     #######        ##";
	gotoxy(16, 8); cout << "##   #   ##    #########    ##    ##       ##";
	gotoxy(16, 9); cout << "##       ##   ##       ##   ##     ##      ##";
	gotoxy(16, 10); cout << "##       ##   ##       ##   ##     ##      ##";
	gotoxy(55, 12); cout << "_for manager";
	gotoxy(10, 14); cout << "------------------------------------------------------------" << endl;
}

//메뉴설정
int Manager::menu() {
	int x = 36;
	int y = 17;

	//메뉴출력
	gotoxy(x - 6, y - 1); //30, 16
	cout << "---------------------" << endl;
	gotoxy(x - 2, y);	//34, 17
	cout << "> 제품 목록" << endl;
	gotoxy(x, y + 1);	//36, 18
	cout << "품목 추가" << endl;
	gotoxy(x, y + 2);	//36, 19
	cout << "품목 삭제" << endl;
	gotoxy(x, y + 3);	//36, 20
	cout << " 입   고  " << endl;
	gotoxy(x, y + 4);	//36, 21
	cout << " 출   고" << endl;
	gotoxy(x, y + 5);	//36, 22
	cout << " 종   료" << endl;
	gotoxy(x - 6, y + 6);	//36, 25
	cout << "---------------------" << endl << endl;

	//메뉴선택
	while (true) {	//무한 반복
		int n = keyControl();
		switch (n) {
		case UP:	//↑를 눌렸을 경우
			if (y > 17) {	//y는 17~24사이만 이동 -> 17보다 커야함
				gotoxy(x - 2, y);	//게임 시작에 있던 >
				cout << " ";	//지우고
				gotoxy(x - 2, --y);	//위쪽으로 1칸 이동후
				cout << ">";	//다시 그리기
			}
			else if (y == 17) {	//맨 위 -> 맨 아래로 이동
				gotoxy(x - 2, y);
				cout << " ";
				y = 22;
				gotoxy(x - 2, y);
				cout << ">";
			}
			break;

		case DOWN:	//↓를 눌렸을 경우
			if (y < 22) {	//y는 17~24사이만 이동 -> 24보다 작아야함
				gotoxy(x - 2, y);
				cout << " ";
				gotoxy(x - 2, ++y);	//아래쪽으로 1칸 이동후
				cout << ">";
			}
			else if (y == 22) {	//맨 아래 -> 맨 위로 이동
				gotoxy(x - 2, y);
				cout << " ";
				y = 17;
				gotoxy(x - 2, y);
				cout << ">";
			}
			break;

		case ENTER:	//엔터 -> 선택했을 경우
			return y - 17;	//y-17를 하여 각 값에 대한 1, 2, 3...값을 받을 수 있다. -> 값 선택
		}
	}
}


int Manager::managerMain() {
	init();

	while (true) {
		title();

		//메뉴 선택 -> 함수
		int select = menu();
		//if (select == 0) productList();
		if (select == 1) addProduct();
		else if (select == 2) delProduct();
		else if (select == 3) warehousing();
		else if (select == 4) release();
		else if (select == 5) {
			gotoxy(0, 27); break;
		}
		system("cls");
	}
	return 0;
}
